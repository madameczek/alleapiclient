// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using costcollector.Infrastructure.Persistence.DbContexts;

#nullable disable

namespace costcollector.Migrations
{
    [DbContext(typeof(OrdersDbContext))]
    [Migration("20240703150253_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("costcollector.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ErpOrderId")
                        .HasColumnType("int")
                        .HasColumnName("erpOrderId");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("invoiceId");

                    b.Property<Guid>("OrderId")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("orderId");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("storeId");

                    b.HasKey("Id")
                        .HasName("PK_panel_lista");

                    b.HasIndex(new[] { "OrderId", "StoreId" }, "si")
                        .IsUnique()
                        .HasFilter("[storeId] IS NOT NULL");

                    b.ToTable("OrderTable", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ErpOrderId = 1,
                            InvoiceId = 12,
                            OrderId = new Guid("024ac720-3857-11ef-ac0a-e5fcc384aba0"),
                            StoreId = 21
                        },
                        new
                        {
                            Id = 2,
                            ErpOrderId = 2,
                            InvoiceId = 13,
                            OrderId = new Guid("64f97c00-3847-11ef-ac0a-e5fcc384aba0"),
                            StoreId = 21
                        });
                });

            modelBuilder.Entity("costcollector.Entities.OrderEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OfferId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("offerId");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("OrderId");

                    b.ToTable("OrderPositions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OfferId = "7770594916",
                            OrderId = 1
                        },
                        new
                        {
                            Id = 2,
                            OfferId = "7770594916",
                            OrderId = 1
                        });
                });

            modelBuilder.Entity("costcollector.Entities.OrderEntry", b =>
                {
                    b.HasOne("costcollector.Entities.Order", "Order")
                        .WithMany("Entries")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("costcollector.Entities.Order", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
